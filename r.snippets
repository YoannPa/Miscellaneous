snippet lib
	library(${1:package})

snippet req
	require(${1:package})

snippet src
	source("${1:file.R}")

snippet ret
	return(${1:code})

snippet mat
	matrix(${1:data}, nrow = ${2:rows}, ncol = ${3:cols})

snippet sg
	setGeneric("${1:generic}", function(${2:x, ...}) {
		standardGeneric("${1:generic}")
	})

snippet sm
	setMethod("${1:generic}", ${2:class}, function(${2:x, ...}) {
		${0}
	})

snippet sc
	setClass("${1:Class}", slots = c(${2:name = "type"}))

snippet if
	if (${1:condition}) {
		${0}
	}

snippet el
	else {
		${0}
	}

snippet ei
	else if (${1:condition}) {
		${0}
	}

snippet fun
	${1:name} <- function(${2:variables}) {
		${0}
	}

snippet for
	for (${1:variable} in ${2:vector}) {
		${0}
	}

snippet while
	while (${1:condition}) {
		${0}
	}

snippet switch
	switch (${1:object},
		${2:case} = ${3:action}
	)

snippet apply
	apply(${1:array}, ${2:margin}, ${3:...})

snippet lapply
	lapply(${1:list}, ${2:function})

snippet sapply
	sapply(${1:list}, ${2:function})

snippet mapply
	mapply(${1:function}, ${2:...})

snippet tapply
	tapply(${1:vector}, ${2:index}, ${3:function})

snippet vapply
	vapply(${1:list}, ${2:function}, FUN.VALUE = ${3:type}, ${4:...})

snippet rapply
	rapply(${1:list}, ${2:function})

snippet ts
	`r paste("#", date(), "------------------------------\n")`

snippet shinyapp
	library(shiny)
	
	ui <- fluidPage(
	  ${0}
	)
	
	server <- function(input, output, session) {
	  
	}
	
	shinyApp(ui, server)

snippet shinymod
	${1:name}_UI <- function(id) {
	  ns <- NS(id)
	  tagList(
		${0}
	  )
	}
	
	${1:name} <- function(input, output, session) {
	  
	}

snippet hdsc
	#!/usr/bin/env Rscript
	library("optparse")
	
	opt_parser = OptionParser(description = "
	##_Create Annotation Table Bladder Cancer HM450K_###############################
	Version = '0.0.1'
	Date = '2020-03-05'
	Author = 'Yoann PAGEAUD'
	Maintainer = 'Yoann PAGEAUD (yoann.pageaud@gmail.com)'
	Dependencies = c('R version 3.6.2 (2019-12-12)',
	'RStudio Version 1.2.5019 – © 2009-2019','!!Add dependencies here!!')
	Description = 'script description here'
	################################################################################
	");
	if (is.null(parse_args(opt_parser)$file) != TRUE){print_help(opt_parser);quit()}

snippet imp
	##IMPORTS
	setwd("")
	Imports = c("pkgs")
	invisible(lapply(Imports, library, character.only = T))

snippet para
	##PARAMETERS

snippet ana
	##ANALYSIS

snippet funtitle
	##FUNCTIONS

snippet hdfn
	#' Write function description here.
	#' 
	#' @param param1 A \code{type} parameter description.
	#' @return A \code{type} object returned description.
	#' @author Yoann Pageaud.
	#' @export
	#' @examples
	#' @references
	#' @keywords internal